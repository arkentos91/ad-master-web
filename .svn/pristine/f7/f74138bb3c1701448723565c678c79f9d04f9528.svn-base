package com.epic.bmlalipay.util.mapping;
// Generated Jan 28, 2016 9:45:39 AM by Hibernate Tools 3.6.0


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
//import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Riskprofile generated by hbm2java
 */
@Entity
@Table(name="RISKPROFILE"
   
    
)
public class Riskprofile  implements java.io.Serializable {


//     private RiskprofileId id;
     private String profilecode;
//     private Currency currency;
     private BigDecimal dailycount;
//     private BigDecimal dailyamount;
//     private BigDecimal p2pMaxTxnAmount;
//     private BigDecimal p2pMinTxnAmount;
//     private BigDecimal posMaxTxnCountPerDay;
//     private BigDecimal posMaxTxnAmountPerDay;
//     private BigDecimal p2pMaxTxnCountPerDay;
//     private BigDecimal p2pMaxTxnAmountPerDay;
     private String description;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createtime;
//     private Set<Customerwallet> customerwallets = new HashSet<Customerwallet>(0);//badrika
//     private Set<Riskcurrency> riskcurrency = new HashSet<Riskcurrency>(0);
     private Set<Risktransactionprofile> risktransaction = new HashSet<Risktransactionprofile>(0);
     private Status defaultstatus;

    public Riskprofile() {
    }

	
    public Riskprofile(String profilecode) {
//        this.id = id;
        this.profilecode = profilecode;
    }

//    public Riskprofile(RiskprofileId id, Currency currency,  BigDecimal dailycount, BigDecimal dailyamount,  String description, String lastupdateduser, Date lastupdatedtime, Date createtime, Status defaultstatus) {
    public Riskprofile(String profilecode, Set<Risktransactionprofile> risktransaction,  BigDecimal dailycount, String description, String lastupdateduser, Date lastupdatedtime, Date createtime, Status defaultstatus) {
        this.profilecode = profilecode;
//        this.id = id;
//        this.currency = currency;
        this.dailycount = dailycount;
//        this.dailyamount = dailyamount;
//        this.p2pMaxTxnAmount = p2pMaxTxnAmount;
//        this.p2pMinTxnAmount = p2pMinTxnAmount;
//        this.posMaxTxnCountPerDay = posMaxTxnCountPerDay;
//        this.posMaxTxnAmountPerDay = posMaxTxnAmountPerDay;
//        this.p2pMaxTxnCountPerDay = p2pMaxTxnCountPerDay;
//        this.p2pMaxTxnAmountPerDay = p2pMaxTxnAmountPerDay;
        this.description = description;
        this.lastupdateduser = lastupdateduser;
        this.lastupdatedtime = lastupdatedtime;
        this.createtime = createtime;
        this.defaultstatus = defaultstatus;
//        this.riskcurrency = riskcurrency;
        this.risktransaction = risktransaction;
//        this.customerwallets = customerwallets;
    }

           
//    @EmbeddedId
//
//    
//    @AttributeOverrides( {
//        @AttributeOverride(name="profilecode", column=@Column(name="PROFILECODE", nullable=false, length=20) ), 
//        @AttributeOverride(name="currencycode", column=@Column(name="CURRENCYCODE", nullable=false, length=5) ) } )
//    public RiskprofileId getId() {
//        return this.id;
//    }
//    
//    public void setId(RiskprofileId id) {
//        this.id = id;
//    }
    
    @Id
    @Column(name="PROFILECODE", nullable=false, length=20)
    public String getProfilecode() {
        return this.profilecode;
    }
    
    public void setProfilecode(String profilecode) {
        this.profilecode = profilecode;
    }

//     @ManyToOne(fetch=FetchType.LAZY)
//    @JoinColumn(name="CURRENCYCODE", insertable = false, updatable = false)
//    public Currency getCurrency() {
//        return currency;
//    }
//
//    public void setCurrency(Currency currency) {
//        this.currency = currency;
//    }

    @Column(name="DAILLY_COUNT", precision=10)  
    public BigDecimal getDailycount() {
        return dailycount;
    }

    public void setDailycount(BigDecimal dailycount) {
        this.dailycount = dailycount;
    }

//    @Column(name="DAILLY_AMOUNT", precision=10)
//    public BigDecimal getDailyamount() {
//        return dailyamount;
//    }
//
//    public void setDailyamount(BigDecimal dailyamount) {
//        this.dailyamount = dailyamount;
//    }
    
    
    
//    
//    
//    @Column(name="POS_MAX_TXN_AMOUNT", precision=10)
//    public BigDecimal getPosMaxTxnAmount() {
//        return this.posMaxTxnAmount;
//    }
//    
//    public void setPosMaxTxnAmount(BigDecimal posMaxTxnAmount) {
//        this.posMaxTxnAmount = posMaxTxnAmount;
//    }
//
//    
//    @Column(name="POS_MIN_TXN_AMOUNT", precision=10)
//    public BigDecimal getPosMinTxnAmount() {
//        return this.posMinTxnAmount;
//    }
//    
//    public void setPosMinTxnAmount(BigDecimal posMinTxnAmount) {
//        this.posMinTxnAmount = posMinTxnAmount;
//    }
//
//    
//    @Column(name="P2P_MAX_TXN_AMOUNT", precision=10)
//    public BigDecimal getP2pMaxTxnAmount() {
//        return this.p2pMaxTxnAmount;
//    }
//    
//    public void setP2pMaxTxnAmount(BigDecimal p2pMaxTxnAmount) {
//        this.p2pMaxTxnAmount = p2pMaxTxnAmount;
//    }
//
//    
//    @Column(name="P2P_MIN_TXN_AMOUNT", precision=10)
//    public BigDecimal getP2pMinTxnAmount() {
//        return this.p2pMinTxnAmount;
//    }
//    
//    public void setP2pMinTxnAmount(BigDecimal p2pMinTxnAmount) {
//        this.p2pMinTxnAmount = p2pMinTxnAmount;
//    }
//
//    
//    @Column(name="POS_MAX_TXN_COUNT_PER_DAY", precision=10)
//    public BigDecimal getPosMaxTxnCountPerDay() {
//        return posMaxTxnCountPerDay;
//    }
//
//    public void setPosMaxTxnCountPerDay(BigDecimal posMaxTxnCountPerDay) {
//        this.posMaxTxnCountPerDay = posMaxTxnCountPerDay;
//    }
//
//    
//    @Column(name="POS_MAX_TXN_AMOUNT_PER_DAY", precision=10)
//    public BigDecimal getPosMaxTxnAmountPerDay() {
//        return posMaxTxnAmountPerDay;
//    }
//
//    public void setPosMaxTxnAmountPerDay(BigDecimal posMaxTxnAmountPerDay) {
//        this.posMaxTxnAmountPerDay = posMaxTxnAmountPerDay;
//    }
//    
//    
//    @Column(name="P2P_MAX_TXN_COUNT_PER_DAY", precision=10)
//    public BigDecimal getP2pMaxTxnCountPerDay() {
//        return p2pMaxTxnCountPerDay;
//    }
//
//    public void setP2pMaxTxnCountPerDay(BigDecimal p2pMaxTxnCountPerDay) {
//        this.p2pMaxTxnCountPerDay = p2pMaxTxnCountPerDay;
//    }
//    
//
//    @Column(name="P2P_MAX_TXN_AMOUNT_PER_DAY", precision=10)
//    public BigDecimal getP2pMaxTxnAmountPerDay() {
//        return p2pMaxTxnAmountPerDay;
//    }
//
//    public void setP2pMaxTxnAmountPerDay(BigDecimal p2pMaxTxnAmountPerDay) {
//        this.p2pMaxTxnAmountPerDay = p2pMaxTxnAmountPerDay;
//    }
    

    @Column(name="DESCRIPTION", length=50)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="LASTUPDATEDUSER", length=20)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=23)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATETIME", length=23)
    public Date getCreatetime() {
        return this.createtime;
    }
    
    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }

//    @OneToMany(fetch=FetchType.LAZY, mappedBy="riskprofile")
//    public Set<Customerwallet> getCustomerwallets() {
//        return customerwallets;
//    }
//
//     public void setCustomerwallets(Set<Customerwallet> customerwallets) {
//        this.customerwallets = customerwallets;
//    }
    
     @OneToMany(fetch=FetchType.LAZY, mappedBy="profilecode")
    public Set<Risktransactionprofile> getRisktransaction() {
        return risktransaction;
    }

    public void setRisktransaction(Set<Risktransactionprofile> risktransaction) {
        this.risktransaction = risktransaction;
    }
    
    
//    @OneToMany(fetch=FetchType.LAZY, mappedBy="profilecode")
//    public Set<Riskcurrency> getRiskcurrency() {
//        return riskcurrency;
//    }
//
//    public void setRiskcurrency(Set<Riskcurrency> riskcurrency) {
//        this.riskcurrency = riskcurrency;
//    }

    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DEFAULTSTATUS")
    public Status getDefaultstatus() {
        return defaultstatus;
    }

    public void setDefaultstatus(Status defaultstatus) {
        this.defaultstatus = defaultstatus;
    }

    

}


