<%-- 
    Document   : servicedetails
    Created on : Jun 12, 2017, 9:41:58 AM
    Author     : prathibha_s
--%>
<%@page import="com.epic.bmlalipay.util.varlist.CommonVarList"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@taglib uri="/struts-tags" prefix="s" %>
<%@taglib  uri="/struts-jquery-tags" prefix="sj"%>
<%@taglib prefix="sjg" uri="/struts-jquery-grid-tags"%>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">

    <head>

        <%@include file="/stylelinks.jspf" %>

        <script type="text/javascript">

            window.onload = function () {
                $("#id").css("color", "black");
            }

            function editformatter(cellvalue, options, rowObject) {
                a = $("#addButton").is(':disabled');
                u = $("#updateButton").is(':disabled');
                return "<a href='#' title='Edit' onClick='javascript:editServiceDetails(&#34;" + cellvalue + "&#34;)'><img class='ui-icon ui-icon-pencil' style='display: block;margin-left: auto;margin-right: auto;'/></a>";
            }

            function deleteformatter(cellvalue, options, rowObject) {
                return "<a href='#/' title='Delete' onClick='javascript:deleteServiceDetailsInit(&#34;" + cellvalue + "&#34;)'><img class='ui-icon ui-icon-trash' style='display: block;margin-left: auto;margin-right: auto;'/></a>";
            }


            function editServiceDetails(keyval) {
                this.input = "";
                this.input1 = "";
                this.input2 = "";
                $.ajax({
                    url: '${pageContext.request.contextPath}/FindServiceDetails.action',
                    data: {id: keyval},
                    dataType: "json",
                    type: "POST",
                    success: function (data) {
                        $('#divmsg').empty();
                        var msg = data.message;

                        if (msg) {
//                            alert(">"+msg+"<");
                            $('#id').val(data.id);
//                            $('#id').attr('readOnly', false);
                            $('#name').val("");
                            $('#spShortCode').val("");
                            $('#serviceType').val("");
                            $('#benificiaryCurrency').val("");
                            $('#digitPrecision').val("");
                            $('#minAmountPerTxn').val("");
                            $('#maxAmountPerTxn').val("");
                            $('#maxAmountPerTxnjq').val("");
                            $('#maxAmountForPeriod').val("");
                            $('#maxTxnForPeriod').val("");
                            $('#termOfDelivery').val("");
                            $('#expirationTime').val("");
                            $('#routingTag').val("");
                            $('#settlementCurrency').val("");
                            $('#country').val("");
                            $('#limitPeriod').val("");
                            $('#status').val('<s:property value="defaultStatus" />');
                            $('#status').prop('disabled', true);

                            $('#divmsg').text("");
                            $('#updateButton').button("disable");

                            var startStatus = <s:property value="vadd" />;
                            if (startStatus) {
                                $('#addButton').button("disable");
                            } else {
                                $('#addButton').button("enable");
                            }
                        } else {
                            $('#oldvalue').val(data.oldvalue);
                            $('#id').val(data.id);
                            $('#id').attr('readOnly', true);
                            $("#id").css("color", "#858585");
                            $('#name').val(data.name);
                            $('#spShortCode').val(data.spShortCode);
                            $('#serviceType').val(data.serviceType);
                            $('#benificiaryCurrency').val(data.benificiaryCurrency);
                            $('#digitPrecision').val(data.digitPrecision);
                            $('#minAmountPerTxn').val(data.minAmountPerTxn);
                            $('#maxAmountPerTxn').val(data.maxAmountPerTxn);
                            $('#maxAmountForPeriod').val(data.maxAmountForPeriod);
                            $('#maxTxnForPeriod').val(data.maxTxnForPeriod);
                            $('#termOfDelivery').val(data.termOfDelivery);
                            $('#expirationTime').val(data.expirationTime);
                            $('#routingTag').val(data.routingTag);
                            $('#settlementCurrency').val(data.settlementCurrency);
                            $('#country').val(data.country);
                            $('#limitPeriod').val(data.limitPeriod);
                            $('#status').prop('disabled', false);
                            $('#status').val(data.status);



                            $('#addButton').button("disable");
                            $('#updateButton').button("enable");
                        }
                    },
                    error: function (data) {
                        window.location = "${pageContext.request.contextPath}/LogoutUserLogin.action?";
                    }
                });
            }

            function deleteServiceDetailsInit(keyval) {
                $('#divmsg').empty();

                $("#deletedialog").data('keyval', keyval).dialog('open');
                $("#deletedialog").html('Are you sure you want to delete service details ' + keyval + ' ?');
                return false;
            }

            function deleteServiceDetails(keyval) {
                this.input = "";
                this.input1 = "";
                this.input2 = "";
                $.ajax({
                    url: '${pageContext.request.contextPath}/DeleteServiceDetails.action',
                    data: {id: keyval},
                    dataType: "json",
                    type: "POST",
                    success: function (data) {
                        if (data.success == 1) {
                            $("#deletesuccdialog").dialog('open');
                            $("#deletesuccdialog").html(data.message);
                            resetFieldData();
                        } else {
                            $("#deleteerrordialog").dialog('open');
                            $("#deleteerrordialog").html(data.message);
                            resetFieldData();
                        }
                    },
                    error: function (data) {
                        window.location = "${pageContext.request.contextPath}/LogoutUserLogin.action?";
                    }
                });
            }

            function getNextID() {

                $.ajax({
                    url: '${pageContext.request.contextPath}/getNextIDServiceDetails.action',
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        $('#id').val(data.id);
//                        $('#code').attr('readOnly', true);
                    },
                    error: function (data) {
//                        $("#deleteerrordialog").dialog('open');
                        window.location = "${pageContext.request.contextPath}/LogoutUserLogin.action?";
                    }
                });
            }

            function resetAllData() {
                a = $("#addButton").is(':disabled');
                u = $("#updateButton").is(':disabled');
                this.input = "";
                this.input1 = "";
                this.input2 = "";

                if (a == true && u == true) {
                    editServiceDetails(null);
                    getNextID();
                } else if (a == true && u == false) {
                    var code = $('#id').val();
                    $('#id').attr('readOnly', true);
                    editServiceDetails(code);
                } else if (a == false && u == true) {
                    editServiceDetails(null);
                    getNextID();
                }

            }

            function resetFieldData() {

                a = $("#addButton").is(':disabled');
                u = $("#updateButton").is(':disabled');
                this.input = "";
                this.input1 = "";
                this.input2 = "";

                var startStatus = '<s:property value="vadd" />'
                $('#id').val("");
//                $('#id').attr('readOnly', false);
                $("#id").css("color", "black");
                $('#name').val("");
                $('#spShortCode').val("");
                $('#serviceType').val("");
                $('#benificiaryCurrency').val("");
                $('#digitPrecision').val("");
                $('#minAmountPerTxn').val("");
                $('#maxAmountPerTxn').val("");
                $('#maxAmountForPeriod').val("");
                $('#maxTxnForPeriod').val("");
                $('#termOfDelivery').val("");
                $('#expirationTime').val("");
                $('#routingTag').val("");
                $('#settlementCurrency').val("");
                $('#country').val("");
                $('#limitPeriod').val("");
                $('#status').val('<s:property value="defaultStatus" />');
                $('#status').prop('disabled', true);


                if (a == true && u == true) {
                    $('#addButton').button("disable");
                    $('#updateButton').button("disable");
                } else if (a == true && u == false && startStatus == 'false') {
                    $('#addButton').button("enable");
                    $('#updateButton').button("disable");
                } else if (a == true && u == false && startStatus == 'true') {
                    $('#addButton').button("disable");
                    $('#updateButton').button("disable");
                } else if (a == false && u == true) {
                    $('#addButton').button("enable");
                    $('#updateButton').button("disable");
                }

                getNextID();
                $('#id').val("");
                $('#id').attr('readOnly', true);
                $("#id").css("color", "black");

                jQuery("#gridtable").trigger("reloadGrid");
            }

            function cancelAllData() {
                this.input = "";
                this.input1 = "";
                this.input2 = "";
                editServiceDetails(null);
                getNextID();
            }




            function format(val) {

                if (val.value.length == 8) {
                    if (val.value.split(".").length == 1) {
                        return val.value + ".";
                    } else {
                        return val.value.substring(0, 10);
                    }
                } else {
                    if (val.value.length > 8) {
                        if (val.value.split(".").length != 1) {
                            return val.value;
                        } else {
                            console.log("---- " + val.value.substring(0, 7))
                            return val.value.substring(0, 7) + "." + val.value.substring(8, 10);
                        }
                    } else {
                        return val.value;
                    }
                }
            }

            function formatFor12Digits(val) {

                if (val.value.length == 10) {
                    if (val.value.split(".").length == 1) {
                        return val.value + ".";
                    } else {
                        return val.value.substring(0, 12);
                    }
                } else {
                    if (val.value.length > 10) {
                        if (val.value.split(".").length != 1) {
                            return val.value;
                        } else {
                            return val.value.substring(0, 9) + "." + val.value.substring(10, 12);
                        }
                    } else {
                        return val.value;
                    }
                }
            }


            var input = "";
            $(function () {

                // var input = $("#maxAmountPerTxnjq").val(); //holds current input as a string
                $("#maxAmountPerTxn").keydown(function (e) {

                    //handle backspace key
                    if (e.keyCode == 8 && input.length >= 11) {
                        input = input.slice(0, 9);
                        $(this).val(formatNumber(input));
                    } else if (e.keyCode == 8 && input.length > 0 && input.length < 11) {
                        input = input.slice(0, input.length - 1); //remove last digit
                        $(this).val(formatNumber(input));
                    } else if (e.keyCode == 8) {
                        input = input.slice(0, input.length - 1); //remove last digit
                        $(this).val(formatNumber(input));
                    } else {
                        var key = getKeyValue(e.keyCode);
                        if (key) {
                            input += key; //add actual digit to the input string
                            $(this).val(formatNumber(input)); //format input string and set the input box value to it
                        }
                    }
                    return false;
                });

                function getKeyValue(keyCode) {
                    if (keyCode > 57) { //also check for numpad keys
                        keyCode -= 48;
                    }
                    if (keyCode >= 48 && keyCode <= 57) {
                        return String.fromCharCode(keyCode);
                    }
                }

                function formatNumber(input) {
                    if (isNaN(parseFloat(input))) {
                        return "0.00"; //if the input is invalid just set the value to 0.00
                    }
                    if (input.length >= 11) {
                        input = input.substring(0, 10);
                    }
                    var num = parseFloat(input);
                    return (num / 100).toFixed(2); //move the decimal up to places return a X.00 format
                }
            });


            var input1 = "";
            $(function () {
                //var input = ""; //holds current input as a string

                $("#maxAmountForPeriod").keydown(function (e) {
                    //handle backspace key
                    if (e.keyCode == 8 && input1.length >= 11) {
                        input1 = input1.slice(0, 9);
                        $(this).val(formatNumber(input1));
                    } else if (e.keyCode == 8 && input1.length > 0 && input1.length < 11) {
                        input1 = input1.slice(0, input1.length - 1); //remove last digit
                        $(this).val(formatNumber(input1));
                    } else if (e.keyCode == 8) {
                        input1 = input1.slice(0, input1.length - 1); //remove last digit
                        $(this).val(formatNumber(input1));
                    } else {
                        var key = getKeyValue(e.keyCode);
                        if (key) {
                            input1 += key; //add actual digit to the input string
                            $(this).val(formatNumber(input1)); //format input string and set the input box value to it
                        }
                    }
                    return false;
                });

                function getKeyValue(keyCode) {
                    if (keyCode > 57) { //also check for numpad keys
                        keyCode -= 48;
                    }
                    if (keyCode >= 48 && keyCode <= 57) {
                        return String.fromCharCode(keyCode);
                    }
                }

                function formatNumber(input) {
                    if (isNaN(parseFloat(input))) {
                        return "0.00"; //if the input is invalid just set the value to 0.00
                    }
                    if (input.length >= 11) {
                        input = input.substring(0, 10);
                    }
                    var num = parseFloat(input);
                    return (num / 100).toFixed(2); //move the decimal up to places return a X.00 format
                }
            });

            var input2 = "";
            $(function () {

                $("#minAmountPerTxn").on('keydown', function (e) {
                    //handle backspace key
                    if (e.keyCode == 8 && input2.length >= 11) {
                        input2 = input2.slice(0, 9);
                        $(this).val(formatNumber(input2));
                    } else if (e.keyCode == 8 && input2.length > 0 && input2.length < 11) {
                        input2 = input2.slice(0, input2.length - 1); //remove last digit
                        $(this).val(formatNumber(input2));
                    } else if (e.keyCode == 8) {
                        input2 = input2.slice(0, input2.length - 1); //remove last digit
                        $(this).val(formatNumber(input2));
                    } else {
                        var key = getKeyValue(e.keyCode);
                        if (key) {
                            input2 += key; //add actual digit to the input string
                            $(this).val(formatNumber(input2)); //format input string and set the input box value to it
                        }
                    }
                    return false;
                });

                function getKeyValue(keyCode) {
                    if (keyCode > 57) { //also check for numpad keys
                        keyCode -= 48;
                    }
                    if (keyCode >= 48 && keyCode <= 57) {
                        return String.fromCharCode(keyCode);
                    }
                }

                function formatNumber(input) {
                    if (isNaN(parseFloat(input))) {
                        return "0.00"; //if the input is invalid just set the value to 0.00
                    }
                    if (input.length >= 11) {
                        console.log("input.length >= 11")
                        input = input.substring(0, 10);
                    }
                    var num = parseFloat(input);
                    return (num / 100).toFixed(2); //move the decimal up to places return a X.00 format
                }
            });





        </script>

    </head>

    <body style="">
        <jsp:include page="/header.jsp"/>

        <div class="main-container">


            <jsp:include page="/leftmenu.jsp"/>

            <div class="main-content">

                <div class="container" style="min-height: 760px;">


                    <!-- start: PAGE NAVIGATION BAR -->
                    <jsp:include page="/navbar.jsp"/>
                    <!-- end: NAVIGATION BAR -->

                    <div class="row">


                        <div id="content1">


                            <s:div id="divmsg">

                                <s:actionerror theme="jquery"/>
                                <s:actionmessage theme="jquery"/>
                            </s:div>

                            <s:set id="vadd" var="vadd"><s:property value="vadd" default="true"/></s:set>
                            <s:set var="vupdatebutt"><s:property value="vupdatebutt" default="true"/></s:set>
                            <s:set var="vupdatelink"><s:property value="vupdatelink" default="true"/></s:set>
                            <s:set var="vdelete"><s:property value="vdelete" default="true"/></s:set>

                                <div id="formstyle">
                                <s:form id="servicedetailsadd" method="post" action="ServiceDetailsList" theme="simple" >
                                    <s:hidden id="oldvalue" name="oldvalue" ></s:hidden>
                                    <s:hidden id="maxAmountPerTxnjq" name="maxAmountPerTxnjq" ></s:hidden>


                                        <div class="row row_1">
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <span style="color: red">*</span><label>ID</label>
                                                <s:textfield cssClass="form-control" name="id" id="id" maxLength="4" onkeyup="$(this).val($(this).val().replace(/[^a-zA-Z0-9 ]/g, ''))" readonly="true" onmouseout="$(this).val($(this).val().replace(/[^a-zA-Z0-9 ]/g, ''))"/>
                                            </div>
                                        </div>


                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Name</label>
                                                <s:textfield cssClass="form-control" name="name" id="name" maxLength="50" />
                                            </div>
                                        </div>

                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Country</label>
                                                <s:select cssClass="form-control" id="country" list="%{countryList}"  headerValue="--Select Country--" headerKey="" name="country" listKey="code" listValue="name"  value="defaultStatus"/>
                                            </div>
                                        </div>

                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>SP Short Code</label>
                                                <s:textfield cssClass="form-control" name="spShortCode" id="spShortCode" maxLength="20" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row row_1">
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Service Type</label>
                                                <s:textfield cssClass="form-control" name="serviceType" id="serviceType" maxLength="20" />
                                            </div>
                                        </div>


                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Beneficiary Currency</label>
                                                <s:textfield cssClass="form-control" name="benificiaryCurrency" id="benificiaryCurrency" maxLength="10"  onkeyup="$(this).val($(this).val().replace(/[^a-zA-Z]/g, ''))"  onmouseout="$(this).val($(this).val().replace(/[^a-zA-Z]/g, ''))" />
                                            </div>
                                        </div>

                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Settlement Currency</label>
                                                <s:textfield cssClass="form-control" name="settlementCurrency" id="settlementCurrency" maxLength="10" onkeyup="$(this).val($(this).val().replace(/[^a-zA-Z]/g, ''))" onmouseout="$(this).val($(this).val().replace(/[^a-zA-Z]/g, ''))"/>
                                            </div>
                                        </div>

                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Digit Precision</label>
                                                <s:textfield cssClass="form-control" name="digitPrecision" id="digitPrecision" maxLength="10" />
                                            </div>
                                        </div>


                                    </div>
                                    <div class="row row_1">
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Term of Delivery</label>
                                                <s:textfield cssClass="form-control" name="termOfDelivery" id="termOfDelivery" maxLength="10" />
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Expiration Time</label>
                                                <s:textfield cssClass="form-control" name="expirationTime" id="expirationTime" maxLength="10" onkeyup="$(this).val($(this).val().replace(/[^0-9]/g, ''))" onmouseout="$(this).val($(this).val().replace(/[^0-9]/g, ''))"/>
                                            </div>
                                        </div>

                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Routing Tag</label>
                                                <s:textfield cssClass="form-control" name="routingTag" id="routingTag" maxLength="50" />
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Status</label>
                                                <s:select cssClass="form-control" id="status" list="%{statusList}"  headerValue="--Select Status--" headerKey="" name="status" listKey="statuscode" listValue="description"  value="defaultStatus" disabled="true" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row row_1">
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Min Amount per Txn</label>
                                                <%--<s:textfield cssClass="form-control" name="minAmountPerTxn" id="minAmountPerTxn" maxLength="11" onmouseout="$(this).val(format(this)); $(this).val($(this).val().replace(/[^0-9.]/g, ''));" onkeyup="$(this).val($(this).val().replace(/[^0-9.]/g, ''));$(this).val(format(this));"  onkeypress="$(this).val(format(this));" onkeydown="cent()"/>--%>
                                                <s:textfield cssClass="form-control amount" name="minAmountPerTxn" id="minAmountPerTxn" maxLength="11"  />
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Max Amount per Txn</label>
                                                <s:textfield cssClass="form-control amount" name="maxAmountPerTxn" id="maxAmountPerTxn" maxLength="11" onmouseout="$(this).val(format(this)); $(this).val($(this).val().replace(/[^0-9.]/g, ''));" onkeyup="$(this).val($(this).val().replace(/[^0-9.]/g, ''));$(this).val(format(this));"  onkeypress="$(this).val(format(this));" />
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Max Txn for Period</label>
                                                <s:textfield cssClass="form-control" name="maxTxnForPeriod" id="maxTxnForPeriod" maxLength="9" onkeyup="$(this).val($(this).val().replace(/[^0-9]/g, ''))" onmouseout="$(this).val($(this).val().replace(/[^0-9]/g, ''))"/>
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Max Amount for Period</label>
                                                <s:textfield cssClass="form-control amount" name="maxAmountForPeriod" id="maxAmountForPeriod" maxLength="11" onmouseout="$(this).val(format(this)); $(this).val($(this).val().replace(/[^0-9.]/g, ''));" onkeyup="$(this).val($(this).val().replace(/[^0-9.]/g, ''));$(this).val(format(this));" onkeypress="$(this).val(format(this));" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row row_1">
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <span style="color: red">*</span><label>Limit Period</label>
                                                <s:select cssClass="form-control" id="limitPeriod" list="%{limitPeriodList}"  headerValue="--Select Limit Period--" headerKey="" name="limitPeriod" listKey="limitid" listValue="period"  value="defaultStatus" />
                                            </div>
                                        </div>
                                    </div>
                                    <s:url var="addurl" action="AddServiceDetails"/>
                                    <s:url var="updateurl" action="UpdateServiceDetails"/>
                                    <div class="row row_popup form-inline">
                                        <div class="col-sm-9">
                                            <div class="form-group">
                                                <span class="mandatoryfield">Mandatory fields are marked with *</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row row_1 form-inline">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <sj:submit button="true" href="%{addurl}" value="Add" targets="divmsg" id="addButton"  disabled="#vadd"
                                                           cssClass="form-control btn_normal"
                                                           cssStyle="border-radius: 12px;background-color:#969595;color:white;"/>
                                            </div>
                                            <div class="form-group">
                                                <sj:submit button="true" href="%{updateurl}" value="Update" targets="divmsg"   disabled="#vupdatebutt" id="updateButton"
                                                           cssClass="form-control btn_normal"
                                                           cssStyle="border-radius: 12px;background-color:#969595;color:white;"/>
                                            </div>
                                            <div class="form-group">
                                                <sj:submit button="true" value="Reset" name="reset" onClick="resetAllData()" 
                                                           cssClass="form-control btn_normal"
                                                           cssStyle="border-radius: 12px;"/>
                                            </div>
                                            <div class="form-group">
                                                <sj:submit button="true" value="Cancel" name="cancel" onClick="cancelAllData()"
                                                           cssClass="form-control btn_normal"
                                                           cssStyle="border-radius: 12px;"/>
                                            </div>

                                        </div>
                                    </div>

                                </s:form>
                            </div>

                            <!-- Start delete confirm dialog box -->
                            <sj:dialog 
                                id="deletedialog" 
                                buttons="{ 
                                'OK':function() { deleteServiceDetails($(this).data('keyval'));$( this ).dialog( 'close' ); },
                                'Cancel':function() { $( this ).dialog( 'close' );} 
                                }" 
                                autoOpen="false" 
                                modal="true" 
                                title="Delete Service Details"                            
                                />
                            <!-- Start delete process dialog box -->
                            <sj:dialog 
                                id="deletesuccdialog" 
                                buttons="{
                                'OK':function() { $( this ).dialog( 'close' );}
                                }"  
                                autoOpen="false" 
                                modal="true" 
                                title="Deleting Process." 
                                />
                            <!-- Start delete error dialog box -->
                            <sj:dialog 
                                id="deleteerrordialog" 
                                buttons="{
                                'OK':function() { $( this ).dialog( 'close' );}                                    
                                }" 
                                autoOpen="false" 
                                modal="true" 
                                title="Delete error."
                                />                          

                            <div id="tablediv">
                                <s:url var="listurl" action="ListServiceDetails"/>
                                <sjg:grid
                                    id="gridtable"
                                    caption="Service Details"
                                    dataType="json"
                                    href="%{listurl}"
                                    pager="true"
                                    gridModel="gridModel"
                                    rowList="10,15,20"
                                    rowNum="10"
                                    autowidth="true"
                                    rownumbers="true"
                                    onCompleteTopics="completetopics"
                                    rowTotal="false"
                                    viewrecords="true"
                                    shrinkToFit="false"
                                    >
                                    <sjg:gridColumn name="id" index="u.id" title="Edit" width="40" sortable="false" align="center" formatter="editformatter" hidden="#vupdatelink"/>
                                    <sjg:gridColumn name="id" index="u.id" title="Delete" width="50" sortable="false" align="center" formatter="deleteformatter" hidden="#vdelete"/>  

                                    <sjg:gridColumn name="id" index="u.id" title="ID"  sortable="true"/>
                                    <sjg:gridColumn name="name" index="u.name" title="Name"  sortable="true"/>
                                    <sjg:gridColumn name="country" index="u.country.name" title="Country"  sortable="true"/>
                                    <sjg:gridColumn name="spShortCode" index="u.sp_short_code" title="SP Short Code"  sortable="true"/>
                                    <sjg:gridColumn name="serviceType" index="u.service_type" title="Service Type"  sortable="true"/>
                                    <sjg:gridColumn name="benificiaryCurrency" index="u.benificiary_currency" title="Benificairy Currency"  sortable="true"/>
                                    <sjg:gridColumn name="digitPrecision" index="u.digit_precision" title="Digital Precision"  sortable="true"/>
                                    <sjg:gridColumn name="minAmountPerTxn" index="u.min_amount_per_txn" title="Min Amount per Txn"  sortable="true"/>
                                    <sjg:gridColumn name="maxAmountPerTxn" index="u.max_amount_per_txn" title="Max Amount per Txn"  sortable="true"/>
                                    <sjg:gridColumn name="limitPeriod" index="u.limit_period" title="Limit Period"  sortable="true"/>

                                    <sjg:gridColumn name="maxAmountForPeriod" index="u.max_amount_for_period" title="Max Amount for Period"  sortable="true"/>
                                    <sjg:gridColumn name="maxTxnForPeriod" index="u.max_txn_for_period" title="Max Txn for Period"  sortable="true"/>
                                    <sjg:gridColumn name="termOfDelivery" index="u.term_of_delivery" title="Term of Delivery"  sortable="true"/>
                                    <sjg:gridColumn name="expirationTime" index="u.expiration_time" title="Expiration Time"  sortable="true"/>
                                    <sjg:gridColumn name="routingTag" index="u.routing_tag" title="Routing tag"  sortable="true"/>
                                    <sjg:gridColumn name="settlementCurrency" index="u.settlement_currency" title="Settlement Currency"  sortable="true"/>

                                    <sjg:gridColumn name="status" index="u.status.description" title="Status"  sortable="true"/>
                                </sjg:grid> 
                            </div>

                        </div>

                    </div>




                    <!-- end: PAGE CONTENT-->
                </div>
            </div>
            <!-- end: PAGE -->
        </div>
        <!-- end: MAIN CONTAINER -->
        <!-- start: FOOTER -->
        <jsp:include page="/footer.jsp"/>
        <!-- end: FOOTER -->



        <!-- end: BODY -->
    </body>
</html>