package com.epic.bmlalipay.util.mapping;
// Generated Mar 26, 2018 11:02:46 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Transactiontype generated by hbm2java
 */
@Entity
@Table(name="TRANSACTIONTYPE"
)
public class Transactiontype  implements java.io.Serializable {


     private String typecode;
     private String description;
     private Status status;
     private String otpRequired;
     private String riskRequired;
     private Set<AcquirerPromotionTxn> acquirerPromotionTxns = new HashSet<AcquirerPromotionTxn>(0);
     private Set<MercustomersOriTransaction> mercustomersOriTransactions = new HashSet<MercustomersOriTransaction>(0);
     private Set<MerchantOriTransaction> merchantOriTransactions = new HashSet<MerchantOriTransaction>(0);
     private Set<TerminalOriTransaction> terminalOriTransactions = new HashSet<TerminalOriTransaction>(0);

    public Transactiontype() {
    }

	
    public Transactiontype(String typecode) {
        this.typecode = typecode;
    }
    public Transactiontype(String typecode, String description, Status status, String otpRequired, String riskRequired, Set<AcquirerPromotionTxn> acquirerPromotionTxns, Set<MercustomersOriTransaction> mercustomersOriTransactions, Set<MerchantOriTransaction> merchantOriTransactions, Set<TerminalOriTransaction> terminalOriTransactions) {
       this.typecode = typecode;
       this.description = description;
       this.status = status;
       this.otpRequired = otpRequired;
       this.riskRequired = riskRequired;
       this.acquirerPromotionTxns = acquirerPromotionTxns;
       this.mercustomersOriTransactions = mercustomersOriTransactions;
       this.merchantOriTransactions = merchantOriTransactions;
       this.terminalOriTransactions = terminalOriTransactions;
    }
   
     @Id 

    
    @Column(name="TYPECODE", unique=true, nullable=false, length=3)
    public String getTypecode() {
        return this.typecode;
    }
    
    public void setTypecode(String typecode) {
        this.typecode = typecode;
    }

    
    @Column(name="DESCRIPTION", length=64)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS")
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="OTP_REQUIRED", length=10)
    public String getOtpRequired() {
        return this.otpRequired;
    }
    
    public void setOtpRequired(String otpRequired) {
        this.otpRequired = otpRequired;
    }

    
    @Column(name="RISK_REQUIRED", length=10)
    public String getRiskRequired() {
        return this.riskRequired;
    }
    
    public void setRiskRequired(String riskRequired) {
        this.riskRequired = riskRequired;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transactiontype")
    public Set<AcquirerPromotionTxn> getAcquirerPromotionTxns() {
        return this.acquirerPromotionTxns;
    }
    
    public void setAcquirerPromotionTxns(Set<AcquirerPromotionTxn> acquirerPromotionTxns) {
        this.acquirerPromotionTxns = acquirerPromotionTxns;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transactiontype")
    public Set<MercustomersOriTransaction> getMercustomersOriTransactions() {
        return this.mercustomersOriTransactions;
    }
    
    public void setMercustomersOriTransactions(Set<MercustomersOriTransaction> mercustomersOriTransactions) {
        this.mercustomersOriTransactions = mercustomersOriTransactions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transactiontype")
    public Set<MerchantOriTransaction> getMerchantOriTransactions() {
        return this.merchantOriTransactions;
    }
    
    public void setMerchantOriTransactions(Set<MerchantOriTransaction> merchantOriTransactions) {
        this.merchantOriTransactions = merchantOriTransactions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transactiontype")
    public Set<TerminalOriTransaction> getTerminalOriTransactions() {
        return this.terminalOriTransactions;
    }
    
    public void setTerminalOriTransactions(Set<TerminalOriTransaction> terminalOriTransactions) {
        this.terminalOriTransactions = terminalOriTransactions;
    }




}


