package com.epic.bmlalipay.util.mapping;
// Generated Mar 26, 2018 11:02:46 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Passwordpolicy generated by hbm2java
 */
@Entity
@Table(name="PASSWORDPOLICY"
    ,schema="dbo"
    
)
public class Passwordpolicy  implements java.io.Serializable {


     private int passwordpolicyid;
     private Integer minimumlength;
     private Integer maximumlength;
     private Integer minimumspecialcharacters;
     private Integer minimumuppercasecharacters;
     private Integer minimumnumericalcharacters;
     private Integer minimumlowercasecharacters;
     private Integer noofinvalidloginattempt;
     private Integer repeatcharactersallow;
     private String initialpasswordexpirystatus;
     private Integer passwordexpiryperiod;
     private Integer noofhistorypassword;
     private Integer minimumpasswordchangeperiod;
     private Integer idleaccountexpiryperiod;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createtime;

    public Passwordpolicy() {
    }

	
    public Passwordpolicy(int passwordpolicyid) {
        this.passwordpolicyid = passwordpolicyid;
    }
    public Passwordpolicy(int passwordpolicyid, Integer minimumlength, Integer maximumlength, Integer minimumspecialcharacters, Integer minimumuppercasecharacters, Integer minimumnumericalcharacters, Integer minimumlowercasecharacters, Integer noofinvalidloginattempt, Integer repeatcharactersallow, String initialpasswordexpirystatus, Integer passwordexpiryperiod, Integer noofhistorypassword, Integer minimumpasswordchangeperiod, Integer idleaccountexpiryperiod, String lastupdateduser, Date lastupdatedtime, Date createtime) {
       this.passwordpolicyid = passwordpolicyid;
       this.minimumlength = minimumlength;
       this.maximumlength = maximumlength;
       this.minimumspecialcharacters = minimumspecialcharacters;
       this.minimumuppercasecharacters = minimumuppercasecharacters;
       this.minimumnumericalcharacters = minimumnumericalcharacters;
       this.minimumlowercasecharacters = minimumlowercasecharacters;
       this.noofinvalidloginattempt = noofinvalidloginattempt;
       this.repeatcharactersallow = repeatcharactersallow;
       this.initialpasswordexpirystatus = initialpasswordexpirystatus;
       this.passwordexpiryperiod = passwordexpiryperiod;
       this.noofhistorypassword = noofhistorypassword;
       this.minimumpasswordchangeperiod = minimumpasswordchangeperiod;
       this.idleaccountexpiryperiod = idleaccountexpiryperiod;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createtime = createtime;
    }
   
     @Id 

    
    @Column(name="PASSWORDPOLICYID", unique=true, nullable=false, precision=5, scale=0)
    public int getPasswordpolicyid() {
        return this.passwordpolicyid;
    }
    
    public void setPasswordpolicyid(int passwordpolicyid) {
        this.passwordpolicyid = passwordpolicyid;
    }

    
    @Column(name="MINIMUMLENGTH", precision=5, scale=0)
    public Integer getMinimumlength() {
        return this.minimumlength;
    }
    
    public void setMinimumlength(Integer minimumlength) {
        this.minimumlength = minimumlength;
    }

    
    @Column(name="MAXIMUMLENGTH", precision=5, scale=0)
    public Integer getMaximumlength() {
        return this.maximumlength;
    }
    
    public void setMaximumlength(Integer maximumlength) {
        this.maximumlength = maximumlength;
    }

    
    @Column(name="MINIMUMSPECIALCHARACTERS", precision=5, scale=0)
    public Integer getMinimumspecialcharacters() {
        return this.minimumspecialcharacters;
    }
    
    public void setMinimumspecialcharacters(Integer minimumspecialcharacters) {
        this.minimumspecialcharacters = minimumspecialcharacters;
    }

    
    @Column(name="MINIMUMUPPERCASECHARACTERS", precision=5, scale=0)
    public Integer getMinimumuppercasecharacters() {
        return this.minimumuppercasecharacters;
    }
    
    public void setMinimumuppercasecharacters(Integer minimumuppercasecharacters) {
        this.minimumuppercasecharacters = minimumuppercasecharacters;
    }

    
    @Column(name="MINIMUMNUMERICALCHARACTERS", precision=5, scale=0)
    public Integer getMinimumnumericalcharacters() {
        return this.minimumnumericalcharacters;
    }
    
    public void setMinimumnumericalcharacters(Integer minimumnumericalcharacters) {
        this.minimumnumericalcharacters = minimumnumericalcharacters;
    }

    
    @Column(name="MINIMUMLOWERCASECHARACTERS", precision=5, scale=0)
    public Integer getMinimumlowercasecharacters() {
        return this.minimumlowercasecharacters;
    }
    
    public void setMinimumlowercasecharacters(Integer minimumlowercasecharacters) {
        this.minimumlowercasecharacters = minimumlowercasecharacters;
    }

    
    @Column(name="NOOFINVALIDLOGINATTEMPT", precision=5, scale=0)
    public Integer getNoofinvalidloginattempt() {
        return this.noofinvalidloginattempt;
    }
    
    public void setNoofinvalidloginattempt(Integer noofinvalidloginattempt) {
        this.noofinvalidloginattempt = noofinvalidloginattempt;
    }

    
    @Column(name="REPEATCHARACTERSALLOW", precision=5, scale=0)
    public Integer getRepeatcharactersallow() {
        return this.repeatcharactersallow;
    }
    
    public void setRepeatcharactersallow(Integer repeatcharactersallow) {
        this.repeatcharactersallow = repeatcharactersallow;
    }

    
    @Column(name="INITIALPASSWORDEXPIRYSTATUS", length=10)
    public String getInitialpasswordexpirystatus() {
        return this.initialpasswordexpirystatus;
    }
    
    public void setInitialpasswordexpirystatus(String initialpasswordexpirystatus) {
        this.initialpasswordexpirystatus = initialpasswordexpirystatus;
    }

    
    @Column(name="PASSWORDEXPIRYPERIOD", precision=5, scale=0)
    public Integer getPasswordexpiryperiod() {
        return this.passwordexpiryperiod;
    }
    
    public void setPasswordexpiryperiod(Integer passwordexpiryperiod) {
        this.passwordexpiryperiod = passwordexpiryperiod;
    }

    
    @Column(name="NOOFHISTORYPASSWORD", precision=5, scale=0)
    public Integer getNoofhistorypassword() {
        return this.noofhistorypassword;
    }
    
    public void setNoofhistorypassword(Integer noofhistorypassword) {
        this.noofhistorypassword = noofhistorypassword;
    }

    
    @Column(name="MINIMUMPASSWORDCHANGEPERIOD", precision=5, scale=0)
    public Integer getMinimumpasswordchangeperiod() {
        return this.minimumpasswordchangeperiod;
    }
    
    public void setMinimumpasswordchangeperiod(Integer minimumpasswordchangeperiod) {
        this.minimumpasswordchangeperiod = minimumpasswordchangeperiod;
    }

    
    @Column(name="IDLEACCOUNTEXPIRYPERIOD", precision=5, scale=0)
    public Integer getIdleaccountexpiryperiod() {
        return this.idleaccountexpiryperiod;
    }
    
    public void setIdleaccountexpiryperiod(Integer idleaccountexpiryperiod) {
        this.idleaccountexpiryperiod = idleaccountexpiryperiod;
    }

    
    @Column(name="LASTUPDATEDUSER", length=20)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=23)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATETIME", length=23)
    public Date getCreatetime() {
        return this.createtime;
    }
    
    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }




}


