package com.epic.bmlalipay.util.mapping;
// Generated Apr 17, 2018 10:57:26 AM by Hibernate Tools 3.6.0



import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AcquirerRiskprofile generated by hbm2java
 */
@Entity
@Table(name="ACQUIRER_RISKPROFILE_CURRENCY"
    ,schema="dbo"
    
)
public class AcquirerRiskprofileCurrency  implements java.io.Serializable {


     private AcquirerRiskprofileId id;
     private AcquirerRiskprofileType acquirerRiskprofileType;
     private Status status;
     private Status statusByDefaultStatus;
     private Currency currency;
     private String description;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createtime;

    public AcquirerRiskprofileCurrency() {
    }

	
    public AcquirerRiskprofileCurrency(AcquirerRiskprofileId id, Currency currency) {
        this.id = id;
        this.currency = currency;
    }
    public AcquirerRiskprofileCurrency(AcquirerRiskprofileId id, AcquirerRiskprofileType acquirerRiskprofileType, Status status, Status statusByDefaultStatus, Currency currency, String description, String lastupdateduser, Date lastupdatedtime, Date createtime) {
       this.id = id;
       this.acquirerRiskprofileType = acquirerRiskprofileType;
       this.status = status;
       this.statusByDefaultStatus = statusByDefaultStatus;
       this.currency = currency;
       this.description = description;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createtime = createtime;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="profilecode", column=@Column(name="PROFILECODE", nullable=false, length=20) ), 
        @AttributeOverride(name="currencycode", column=@Column(name="CURRENCYCODE", nullable=false, length=5) ) } )
    public AcquirerRiskprofileId getId() {
        return this.id;
    }
    
    public void setId(AcquirerRiskprofileId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RISKPROFILE_TYPE")
    public AcquirerRiskprofileType getAcquirerRiskprofileType() {
        return this.acquirerRiskprofileType;
    }
    
    public void setAcquirerRiskprofileType(AcquirerRiskprofileType acquirerRiskprofileType) {
        this.acquirerRiskprofileType = acquirerRiskprofileType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS")
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DEFAULT_STATUS")
    public Status getStatusByDefaultStatus() {
        return this.statusByDefaultStatus;
    }
    
    public void setStatusByDefaultStatus(Status statusByDefaultStatus) {
        this.statusByDefaultStatus = statusByDefaultStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CURRENCYCODE", nullable=false, insertable=false, updatable=false)
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    
    @Column(name="DESCRIPTION", length=50)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="LASTUPDATEDUSER", length=20)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=23)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATETIME", length=23)
    public Date getCreatetime() {
        return this.createtime;
    }
    
    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }




}


